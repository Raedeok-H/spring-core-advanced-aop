** 프록시와 내부 호출 - 문제
    스프링은 프록시 방식의 AOP를 사용한다.
    따라서 AOP를 적용하려면 항상 프록시를 통해서 대상 객체(Target)을 호출해야 한다.
    이렇게 해야 프록시에서 먼저 어드바이스를 호출하고, 이후에 대상 객체를 호출한다.
    만약 프록시를 거치지 않고 대상 객체를 "직접 호출"하게 되면 AOP가 적용되지 않고, 어드바이스도 호출되지 않는다.
    AOP를 적용하면 스프링은 대상 객체 대신에 프록시를 스프링 빈으로 등록한다.
    따라서 스프링은 의존관계 주입시에 항상 프록시 객체를 주입한다.
    프록시 객체가 주입되기 때문에 대상 객체를 직접 호출하는 문제는 일반적으로 발생하지 않는다.
    하지만 "대상 객체의 내부에서 메서드 호출이 발생하면 프록시를 거치지 않고 대상 객체를 직접 호출하는 문제"가발생한다.
        - 실무에서 반드시 한번은 만나서 고생하는 문제이기 때문에 꼭 이해하고 넘어가자.
        - 예제를 통해서 내부 호출이 발생할 때 어떤 문제가 발생하는지 알아보자. 먼저 내부 호출이 발생하는 예제를 만들어보자.

    - 프록시 방식의 AOP 한계
    스프링은 프록시 방식의 AOP를 사용한다. 프록시 방식의 AOP는 메서드 내부 호출에 프록시를 적용할 수 없다.
    지금부터 이 문제를 해결하는 방법을 하나씩 알아보자.
     +) AspectJ는 된다. 하지만 복잡하다.

** 대안 1 자기 자신 주입(스프링 부트 2.6 이상 부터 순환 참조를 아예 막아놓았다.)
    이제는 internal() 을 호출할 때 자기 자신의 인스턴스를 호출하는 것이 아니라,
    프록시 인스턴스를 통해서 호출하는 것을 확인할 수 있다. 당연히 AOP도 잘 적용된다.

